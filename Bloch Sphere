from qiskit import *
from qiskit.visualization import plot_bloch_multivector
from qiskit.visualization import plot_histogram
from qiskit_aer import Aer
%matplotlib inline
import math
Aer.backends()
qasm_simulator = Aer.get_backend('qasm_simulator')
statevector_simulator = Aer.get_backend('statevector_simulator')
def run_on_simulators(circuit):
    statevec_job = statevector_simulator.run(circuit)
    result = statevec_job.result()
    statevec = result.get_statevector()

    num_qubits = circuit.num_qubits
    circuit.measure([i for i in range(num_qubits)],[i for i in range(num_qubits)])
    qasm_job = qasm_simulator.run(circuit,shots=1024).result()
    counts = qasm_job.get_counts()

    return statevec, counts
circuit = QuantumCircuit(2,2)
statevec, counts = run_on_simulators(circuit)
print("Statevector:", statevec)
print("Counts:", counts)
plot_bloch_multivector(statevec)
circuit.h(0)
statevec, counts = run_on_simulators(circuit)
plot_bloch_multivector(statevec)
